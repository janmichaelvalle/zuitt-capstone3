{"ast":null,"code":"var _jsxFileName = \"/Users/mikeevalle/Documents/zuiit-2024/B384/individual-valle/capstone3/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route, Routes } from 'react-router-dom';\nimport AppNavbar from './components/AppNavBar';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\n// Bootstrap Container\nimport { Container } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { UserProvider } from './UserContext';\nimport Products from './pages/Products';\nimport AddProduct from './pages/AddProduct';\nimport ProductView from './pages/ProductView';\n\n// ReactJS is a single page application (SPA)\n// Whenever a link is clicked, it functions as if the page is being reloaded but what it actually does is it goes through the process of rendering, mounting, rerendering and unmounting components\n// When a link is clicked, React JS changes the URL of the application to mirror how HTML accesses its URLS\n// It renders the component executing the function component and it's expressions\n// After rendering, it mounts the component displaying the elements\n// Whenever a state is updated or changes are made with ReactJS, it rerenders the component\n// Lastly, when a different page is loaded, it unmounts the component and repeats this process\n// The updating of the user interface closely mirrors that of how HTML deals with page navigation with the exception that React JS does not reload the whole page \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State hook for the user state that's defined here for a global scope\n  // Initialized as an object with properties from the localStorage\n  // This will be used to store the user information and will be used for validating if a user is logged in on the app or not\n  const [user, setUser] = useState({\n    id: null,\n    isAdmin: null\n  });\n\n  // Function for clearing localStorage on logout\n  const unsetUser = () => {\n    localStorage.clear();\n  };\n\n  // Used to check if the user information is properly stored upon login and the localStorage information is cleared upon logout\n  useEffect(() => {\n    fetch(`http://localhost:4005/b5/users/details`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(\"userDetails\", data);\n      if (typeof data.user !== \"undefined\") {\n        setUser({\n          id: data.user._id,\n          isAdmin: data.user.isAdmin\n        });\n      } else {\n        setUser({\n          id: null,\n          isAdmin: null\n        });\n      }\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // The 'BrowserRouter (Router)' component will enable us to simpulate pag navigation by synchronizing the shown content and the shown URL in the web browser.\n    // Storing information in a context object is done by providing the information ussing the corresponding \"Provider\" component and passing the information via the \"value\" prop\n    // All the information provided to the Provider component can be accessed later on from the context object as properties\n    _jsxDEV(UserProvider, {\n      value: {\n        user,\n        setUser,\n        unsetUser\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/logout\",\n              element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/products\",\n              element: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/products/add\",\n              element: /*#__PURE__*/_jsxDEV(AddProduct, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/products/:productId\",\n              element: /*#__PURE__*/_jsxDEV(ProductView, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"OTfl+Ed9ojVxwqeNoEu8womdShI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","AppNavbar","Register","Login","Profile","Container","useState","useEffect","UserProvider","Products","AddProduct","ProductView","jsxDEV","_jsxDEV","App","_s","user","setUser","id","isAdmin","unsetUser","localStorage","clear","fetch","headers","Authorization","getItem","then","res","json","data","console","log","_id","value","children","fluid","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Logout","_c","$RefreshReg$"],"sources":["/Users/mikeevalle/Documents/zuiit-2024/B384/individual-valle/capstone3/src/App.js"],"sourcesContent":["import './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route, Routes } from 'react-router-dom';\nimport AppNavbar from './components/AppNavBar';\n\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\n// Bootstrap Container\nimport { Container } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { UserProvider } from './UserContext';\nimport Products from './pages/Products';\nimport AddProduct from './pages/AddProduct';\nimport ProductView from './pages/ProductView';\n\n\n// ReactJS is a single page application (SPA)\n// Whenever a link is clicked, it functions as if the page is being reloaded but what it actually does is it goes through the process of rendering, mounting, rerendering and unmounting components\n// When a link is clicked, React JS changes the URL of the application to mirror how HTML accesses its URLS\n// It renders the component executing the function component and it's expressions\n// After rendering, it mounts the component displaying the elements\n// Whenever a state is updated or changes are made with ReactJS, it rerenders the component\n// Lastly, when a different page is loaded, it unmounts the component and repeats this process\n// The updating of the user interface closely mirrors that of how HTML deals with page navigation with the exception that React JS does not reload the whole page \nfunction App() {\n  // State hook for the user state that's defined here for a global scope\n  // Initialized as an object with properties from the localStorage\n  // This will be used to store the user information and will be used for validating if a user is logged in on the app or not\n  const [user, setUser] = useState({\n    id: null,\n    isAdmin: null\n  })\n\n  // Function for clearing localStorage on logout\n  const unsetUser = () => {\n      localStorage.clear();\n  }\n\n  // Used to check if the user information is properly stored upon login and the localStorage information is cleared upon logout\n  useEffect(() => {\n    fetch(`http://localhost:4005/b5/users/details`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(\"userDetails\", data)\n      if(typeof data.user !== \"undefined\"){\n        setUser({\n          id: data.user._id,\n          isAdmin: data.user.isAdmin\n        });\n      } else {\n        setUser({\n          id: null,\n          isAdmin: null\n        })\n      }\n    })\n  }, [])\n\n  return (\n    // The 'BrowserRouter (Router)' component will enable us to simpulate pag navigation by synchronizing the shown content and the shown URL in the web browser.\n    // Storing information in a context object is done by providing the information ussing the corresponding \"Provider\" component and passing the information via the \"value\" prop\n    // All the information provided to the Provider component can be accessed later on from the context object as properties\n    <UserProvider value={{ user, setUser, unsetUser }}>\n      <Router>\n        <Container fluid>\n            <AppNavbar />\n            {/*The \"Routes\" component holds all our Route components. It selects which 'Route' component to show based on the URL endpoint.*/}\n            <Routes>\n              \n                <Route path=\"/register\" element={<Register />}/>\n                <Route path=\"/login\" element={<Login />}/>\n                <Route path=\"/logout\" element={<Logout />}/>\n                <Route path=\"/profile\" element={<Profile />}/>\n                <Route path=\"/products\" element={<Products />}/>\n                <Route path=\"/products/add\" element={<AddProduct />}/>\n                <Route path=\"/products/:productId\" element={<ProductView />}/>\n\n                \n       \n             \n            </Routes>\n        </Container>\n      </Router>\n    </UserProvider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}