{"ast":null,"code":"var _jsxFileName = \"/Users/mikeevalle/Documents/zuiit-2024/B384/individual-valle/capstone3/src/pages/Register.js\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterUser(e) {\n  // Prevents page redirection via form submission\n  e.preventDefault();\n  fetch('http://localhost:4005/b5/users/', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      mobileNo: mobileNo,\n      password: password\n    })\n  }).then(res => res.json()).then(data => {\n    // Data is the response of the API/server after it's been processed as a JS object through our res.json() method.\n    console.log(data);\n    // Data will only contain an email property if we can properly save our user.\n    if (data.message === \"Registered Successfully\") {\n      setFirstName('');\n      setLastName('');\n      setEmail('');\n      setMobileNo('');\n      setPassword('');\n      setConfirmPassword('');\n      alert(\"Registration successful\");\n\n      // Redirect to login page upon successful registration\n      /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n    } else if (data.error === \"Email invalid\") {\n      alert(\"Email is invalid\");\n    } else if (data.error === \"Mobile number invalid\") {\n      alert(\"Mobile number is invalid\");\n    } else if (data.error === \"Password must be atleast 8 characters\") {\n      alert(\"Password must be at least 8 characters\");\n    } else {\n      alert(\"Something went wrong.\");\n    }\n  }).catch(error => {\n    console.error('Error:', error);\n    alert(\"Something went wrong.\");\n  });\n}\n_c = RegisterUser;\nvar _c;\n$RefreshReg$(_c, \"RegisterUser\");","map":{"version":3,"names":["Navigate","jsxDEV","_jsxDEV","RegisterUser","e","preventDefault","fetch","method","headers","body","JSON","stringify","firstName","lastName","email","mobileNo","password","then","res","json","data","console","log","message","setFirstName","setLastName","setEmail","setMobileNo","setPassword","setConfirmPassword","alert","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","error","catch","_c","$RefreshReg$"],"sources":["/Users/mikeevalle/Documents/zuiit-2024/B384/individual-valle/capstone3/src/pages/Register.js"],"sourcesContent":["import { Navigate } from 'react-router-dom';\n\nfunction RegisterUser(e) {\n    // Prevents page redirection via form submission\n    e.preventDefault();\n\n    fetch('http://localhost:4005/b5/users/', {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            mobileNo: mobileNo,\n            password: password\n        })\n    })\n    .then(res => res.json())\n    .then(data => {\n        // Data is the response of the API/server after it's been processed as a JS object through our res.json() method.\n        console.log(data);\n        // Data will only contain an email property if we can properly save our user.\n        if (data.message === \"Registered Successfully\") {\n            setFirstName('');\n            setLastName('');\n            setEmail('');\n            setMobileNo('');\n            setPassword('');\n            setConfirmPassword('');\n\n            alert(\"Registration successful\");\n\n            // Redirect to login page upon successful registration\n            <Navigate to=\"/login\" replace />;\n        } else if (data.error === \"Email invalid\") {\n            alert(\"Email is invalid\");\n        } else if (data.error === \"Mobile number invalid\") {\n            alert(\"Mobile number is invalid\");\n        } else if (data.error === \"Password must be atleast 8 characters\") {\n            alert(\"Password must be at least 8 characters\");\n        } else {\n            alert(\"Something went wrong.\");\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert(\"Something went wrong.\");\n    });\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAACC,CAAC,EAAE;EACrB;EACAA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElBC,KAAK,CAAC,iCAAiC,EAAE;IACrCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,SAAS,EAAEA,SAAS;MACpBC,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACd,CAAC;EACL,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;IACV;IACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;IACA,IAAIA,IAAI,CAACG,OAAO,KAAK,yBAAyB,EAAE;MAC5CC,YAAY,CAAC,EAAE,CAAC;MAChBC,WAAW,CAAC,EAAE,CAAC;MACfC,QAAQ,CAAC,EAAE,CAAC;MACZC,WAAW,CAAC,EAAE,CAAC;MACfC,WAAW,CAAC,EAAE,CAAC;MACfC,kBAAkB,CAAC,EAAE,CAAC;MAEtBC,KAAK,CAAC,yBAAyB,CAAC;;MAEhC;MACA,aAAA5B,OAAA,CAACF,QAAQ;QAAC+B,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpC,CAAC,MAAM,IAAIhB,IAAI,CAACiB,KAAK,KAAK,eAAe,EAAE;MACvCP,KAAK,CAAC,kBAAkB,CAAC;IAC7B,CAAC,MAAM,IAAIV,IAAI,CAACiB,KAAK,KAAK,uBAAuB,EAAE;MAC/CP,KAAK,CAAC,0BAA0B,CAAC;IACrC,CAAC,MAAM,IAAIV,IAAI,CAACiB,KAAK,KAAK,uCAAuC,EAAE;MAC/DP,KAAK,CAAC,wCAAwC,CAAC;IACnD,CAAC,MAAM;MACHA,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC,CAAC,CACDQ,KAAK,CAACD,KAAK,IAAI;IACZhB,OAAO,CAACgB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BP,KAAK,CAAC,uBAAuB,CAAC;EAClC,CAAC,CAAC;AACN;AAACS,EAAA,GAhDQpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}